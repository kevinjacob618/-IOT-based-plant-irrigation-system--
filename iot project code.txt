#define BLYNK_TEMPLATE_ID "TMPL3PKOFx7e0"
#define BLYNK_TEMPLATE_NAME "Plant watering system"
#define BLYNK_AUTH_TOKEN "6MsPk-Z2U2ONeG5rvWLQgKb7-nG_u7ij"
#define BLYNK_PRINT Serial

#include <WiFi.h>
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>
#include <DHT.h>

#define DHT_PIN 25       // Pin connected to the DHT11 sensor
#define DHT_TYPE DHT11   // DHT sensor type

char auth[] = BLYNK_AUTH_TOKEN;
char ssid[] = "Oneplus 6t";
char pass[] = "Sanjoe@2021";
BlynkTimer timer;
int pumpstatus = 0; //initially pump is set off
int moisturesensor = 33; //soil moisture value is set to pin 33 of

DHT dht(DHT_PIN, DHT_TYPE); 

BLYNK_WRITE(V0)
{ 
  int pinValue = param.asInt();
  digitalWrite(23, !pinValue); // due to open collector output of sensor
}

void setup()
{
  pinMode(moisturesensor, INPUT); //GPI0 input configuration
  pinMode(23, OUTPUT); //GPI0 output configuration
  
  Serial.begin(115200);
  
  Blynk.begin(auth, ssid, pass);
  
  dht.begin();
}

void loop()
{
  Blynk.run();
  
  int soilmoisture = 4095-analogRead(moisturesensor); //to invert the value due to open collector output nature of soil moisture sensor
  Blynk.virtualWrite(V1, soilmoisture);

  if (soilmoisture >= 1400 && pumpstatus == 0) {
    digitalWrite(23, HIGH);
    pumpstatus = 1;
  } else if (soilmoisture <= 1200 && pumpstatus == 1) {
    digitalWrite(23, LOW);
    pumpstatus = 0;
  }

  float temperature = dht.readTemperature();
  if (!isnan(temperature)) {
    Blynk.virtualWrite(V2, temperature);
  }

  delay(1000);  // Delay for 1 second before taking the next sensorÂ readings
}